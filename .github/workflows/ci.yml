name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    # - name: Install dependencies
    #   run: |
    #     python -m pip install --upgrade pip
    #     pip install -e .
    #     pip install pytest pytest-cov black isort flake8 mypy

    # - name: Lint with flake8
    #   run: |
    #     # Stop the build if there are Python syntax errors or undefined names
    #     flake8 yaml2py/ --count --select=E9,F63,F7,F82 --show-source --statistics
    #     # Exit-zero treats all errors as warnings
    #     flake8 yaml2py/ --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics

    # - name: Check code formatting with black
    #   run: |
    #     black --check yaml2py/ tests/

    # - name: Check import sorting with isort
    #   run: |
    #     isort --check-only yaml2py/ tests/

    # - name: Type checking with mypy
    #   run: |
    #     mypy yaml2py/ --ignore-missing-imports
    #   continue-on-error: true  # 允許類型檢查失敗但不中斷 CI

    - name: Test with pytest
      run: |
        pytest tests/ --cov=yaml2py --cov-report=xml --cov-report=term

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

    - name: Test CLI functionality
      run: |
        # 測試 CLI 是否能正常工作
        yaml2py --help
        
        # 測試基本功能
        cd examples/basic_usage
        yaml2py --config config.yaml --output ./test_generated
        python -c "
        import sys
        sys.path.insert(0, './test_generated')
        from schema import SystemSchema
        print('✅ CLI 測試通過')
        "

  build:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    
    - name: Build package
      run: python -m build
    
    - name: Check package
      run: python -m twine check dist/*
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist-packages
        path: dist/